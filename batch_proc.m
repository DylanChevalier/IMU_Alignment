PROGRAMS = {
	% ...
};


close all; clear all; clc;
addpath('./Functions');
addpath('./Functions/Interpolation');
addpath('./Functions/Alignment');


SIGNAL_PARAMETERS = struct( ...
	'main_pulse_width', 1000, ...
...	% ------------- side pulse, before the main pulse -------------
	'add_side_pulse', true, ...
	'side_pulse_shift_interval', [0.25, 0.75], ...
    'cos_ratio_amplitude_interval', [0.25, 0.5], ...
    'cos_ratio_width_interval', [0.25, 1.5], ...
	'side_pulse_roundness_interval', [0.2, 0.4], ...
...	% ------------- oscillations -------------
	'add_left_oscillations', true, ...
	'left_oscillations_ratio_amplitude_interval', [0.01, 0.1], ...
    'left_oscillations_ratio_width_interval', [0.25, 1], ...
	'left_oscillations_env_roundness_interval', [1, 1], ...
	'left_oscillations_freq_ratio_interval', [5, 10], ...
...	% ------------- oscillations -------------
	'add_right_oscillations', true, ...
	'right_oscillations_ratio_amplitude_interval', [0.01, 0.1], ...
    'right_oscillations_ratio_width_interval', [0.25, 1], ...
	'right_oscillations_env_roundness_interval', [1, 1], ...
	'right_oscillations_freq_ratio_interval', [5, 10], ...
...	% ------------- interference (common for all sensors) -------------
    'NbInterference_interval', [20, 40], ...
	'interference_height_interval', [0.01, 0.2], ...
    'interference_width_interval', [50, 500], ...
... % ------------- sensor-specific parameters -------------
	'dvs', struct( ...
		'sensor_name', 'dvs', ...
		'time_drift', 0.00001, ...				% specify 0 for no time drift
		'd', 5, ...								% Axis time error pourcentage (%)
		'NbInterference_interval', [20, 40], ...
		'interference_height_interval', [0.01, 0.05], ...
		'interference_width_interval', [10, 500], ...
		'noise_sigma',0.01 ...					% specify 0 for no noise
	), ...
	'rs', struct( ...
		'sensor_name', 'rs', ...
		'time_drift', 0.00001, ...				% specify 0 for no time drift
		'd', 5, ...								% Axis time error pourcentage (%)
		'NbInterference_interval', [20, 40], ...
		'interference_height_interval', [0.01, 0.05], ...
		'interference_width_interval', [10, 500], ...
		'noise_sigma',0.01 ...					% specify 0 for no noise
	), ...
	'lidar', struct( ...
		'sensor_name', 'dvs', ...
		'time_drift', 0.00001, ...				% specify 0 for no time drift
		'd', 5, ...								% Axis time error pourcentage (%)
		'NbInterference_interval', [20, 40], ...
		'interference_height_interval', [0.01, 0.05], ...
		'interference_width_interval', [10, 500], ...
		'noise_sigma',0.01 ...					% specify 0 for no noise
	) ...
);

%main

%return
%for exp_n = 1:6
	% parameters
	
	for k = 1:4
		main
		figure;
		plot(twanted, s_wanted);
		hold on;
		plot(tdvs, s_dvs, 'r-');
		plot(trs, s_rs, 'g-');
		plot(tlidar, s_lidar, 'b-');
		legend('ideal', 'dvs', 'rs', 'lidar');
		drawnow;
		% save results
	end
%end



